
NOTA: Se ha intentado realizar la prçactica bajo los principios de agilismo:
		*.- producto incremental.
		*.- añadiendo valor / funcionalidad.
		*.- en cada 'sprint' se ha implementado lo mínimo.

Session 1: Abril 1, 2015: 3 horas.
------------------------
*.- Crear proyecto: java aplication.
*.- Crear bbdd.
*.- Crear tabla airplane ()
		tabla mínima para probar la conexión con hibernate / BBDD.
		se insertan dos registros de forma manual via SQL para las pruebas
*.- Crear objeto Airplane persistente
*.- Mapear objeto Avion 
*.- Implementar: obtener un avion específico 'retrieveAirplane(id)'
*.- implementar: obtener lista de aviones 'retrieveAllAirplanes'
*.- Añadir proyecto a Git.

Retrospectiva:
	*.- Problemas al tratar de leer todos los elementos de una tabla.
	*.- Cómo añadir un proyecto a git.

Session 2: Abril 2, 2015: 2 horas
------------------------
*.- Crear tabla airport (según diseño del examen)
*.- Crear tabla gate (según diseño de examen)
*.- Modificar tabla/objeto Airport: campos en ingles (nombre -> name)
*.- Crear objeto Airport.
*.- Mapear objeto Airport.
*.- Crear objeto Gate.
*.- Mapear objeto Gate.

Retrospectiva:
	*.- Configurar el fichero SQL de forma que se pueda ejecutar desde eclipse. (done!)
	
Session 3: Abril 2, 2015: 2 horas
------------------------
*.- Mapear la relación 1 a n de Gate-Airport  - Relaciones uno a muchos unidireccionales

BLOQUEO: 
	*.- no consigo hacer el set de la propiedad 'gates' para acceder a la lista de gates de un Airport.
	*.- es algo relacionado con el tipo 'java.util.List', pero no consigo darle la vuelta.

Retrospectiva:
	*.- mucho OJO con las comillas dobles al hace copy/paste desde pdf, las convierte en comillas inclinada y dan error!
	*.- problemas con los permisos de smartgit.
	
Session 4: Abril 2, 2015: 3 horas
------------------------
*.- Mapear la relación 1 a n de Gate-Airport  - Relaciones uno a muchos unidireccionales

BLOQUEO RESUELTO: 
	*.- el problema estaba la definir las 'gates'. No podían ser List, tienen que ser Set

Retrospectiva:
	*.- problemas con los permisos de smartgit.
	
Session 5: Abril 2, 2015: 3 horas
------------------------
*.- Añadir aeropuerto con puerta de embarque!

Retrospectiva:
	*.- Primero añadir Aeropuerto y luego las puertas!
	

Session 6: Abril 7, 2015: 3 horas
------------------------
*.- Modificar el mapping airport-gates de 'set' a 'bag' apara obtener una List de gates en vez de un Set de gates. 

Retrospectiva:
	*.- No se pude salvar el airport.gates de 'un golpe'? Hay que recorrer la lista de gates para salvarla??
	
Session 7: Abril 7, 2015: 3 horas
------------------------

*.- añadir puertas a un airport dado: buscar el airport y añadirle x gates.
*.- modificar el fichero sql para que si no existe la database Aena la cree.	
	
Session 8: Abril 8, 2015: 3 horas
------------------------

*.- alter table airplane: add columns totalNumSeats, numSeatsConfirmed, totalNumSeatsToBook, numSeatsBooked
*.- alter hibernate mapping.
*.- alter pojo Airplane.
*.- Implementar listAirplaneByPlateNumber.
*.- Implementar setAirplaneTotalNumSeats.
*.- Nueva tabla ticket.
*.- Crear mapping hibernate Ticket.
*.- Añadir mapping a la configuración.

Session 9: Abril 9, 2015: 1.5 horas
------------------------
*.- Implementar bookSeat & confirmSeat.

Session 10: Abril 9, 2015: 3.0 horas
------------------------
*.- DONE!!!: Conseguir que al persitir un objeto 'padre', persistan sus 'hijos'. Y que si el padre no tiene hijos éstos se borren 'cascade="all-delete-orphan"'
*.- Renombrar todo lo referente a airplane-boardingpass y testing

Session 11: Abril 13, 2015: 4.0 horas
------------------------
*.- Testear opciones airplane-boardingpass
*.- Actualizar relacion airport-gate (inverse = "false" (estaba a true)).
*.- Implementar DAO / DAOImpl.
*.- Probar a añadir airport-gate y dejar la forma de ejecutar preparada.

Session 12: Abril 13, 2015: 3.0 horas
------------------------
*.- poner valores por defecto en las tablas?
*.- airport.toString -> que muestre el número y estado de las gate.
*.- implementar: changeGateStatusFromAirport airportName gateNumber 
*.- implementar las siguiente consulta: Dado un aeropuerto, determinar el número de puertas de embarque disponibles. (Criteria + HQL)

Session 13: Abril 13, 2015: 0.5 horas
------------------------
*.- Añadir diagrama UML a proyecto

Session 14: Abril 13, 2015: 1.0 horas
------------------------
*.- Completar diagrama UML del proyecto
*.- Comprobar métodos de los elementos pojo persistentes.
*.- Atasco: no hay forma de darle la vuelta a la HQL;

Session 15: Abril 14, 2015: 2.0 horas
------------------------
*.- SIN SALIDA: Modificar pojo Gate para acomodar a un Airport. El mapping del Gate tb habrá que modificarlo.
*.- Dejamos los POJO's y los mappings en paz!
*.- Implementar JOIN HQL y DetatechedCriteria!!! FUNCIONA!!!!

Session 16: Abril 15, 2015: 1.5 horas
------------------------
*.- implementar: Dado un avión, determinar el número de asientos reservados. Este número se 
		corresponde con el número de billetes comprados para un avión determinado.
		
*.- implementar: Dado un avión, determinar el número de asientos ocupados. Este número se 
		corresponde con el número de personas que están dentro de un avión determinado.
		
Session 17: Abril 15, 2015: 2.5 horas
------------------------
*.- Actualizar diagrama E-R.
*.- Incorporar fichero odt / pdf con una explicación del proyecto.

THINGS TO DO:
	

	*.- diagrama UML.	
